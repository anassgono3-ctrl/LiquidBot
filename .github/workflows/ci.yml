# CI workflow for LiquidBot
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: liquidbot
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/liquidbot
      API_KEY: test_key
      JWT_SECRET: test_secret
      USE_MOCK_SUBGRAPH: "true"
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Generate Prisma Client
        working-directory: ./backend
        run: npx prisma generate
      
      - name: Lint
        working-directory: ./backend
        run: npm run lint
      
      - name: Type check
        working-directory: ./backend
        run: npm run typecheck
      
      - name: Run tests with coverage
        working-directory: ./backend
        run: npm test -- --coverage
      
      - name: Build
        working-directory: ./backend
        run: npm run build
      
      - name: Upload coverage reports
        if: matrix.node-version == '18.x'
        uses: codecov/codecov-action@v3
        with:
          directory: ./backend/coverage
          flags: backend
